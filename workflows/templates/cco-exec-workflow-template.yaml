apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cco-exec
spec:
  entrypoint: cco-exec
  arguments:
    parameters:
      - name: exec_script
        default: "ckan-cloud-operator --help"
  templates:
    - name: cco-exec
      serviceAccountName: dgp-operator-runner
      inputs:
        parameters:
          - name: exec_script
      volumes:
        - name: service-account-key
          secret:
            secretName: cco-service-account-key
        - name: cco-dir
          emptyDir: {}
        - name: datacity-k8s
          emptyDir: {}
      initContainers:
        - name: cco-init
          image: datacity/ckan-cloud-operator
          imagePullPolicy: Always
          volumeMounts:
            - name: service-account-key
              mountPath: /mnt/service-account-key
            - name: cco-dir
              mountPath: /mnt/cco_dir
            - name: datacity-k8s
              mountPath: /mnt/datacity_k8s
          args:
            - -c
            - |
              cp /mnt/service-account-key/service_account_key.json /mnt/cco_dir &&\
              cd /mnt/datacity_k8s &&\
              curl -sLO https://github.com/hasadna/datacity-k8s/archive/refs/heads/master.zip &&\
              unzip master.zip &&\
              mv datacity-k8s-master/* ./
      script:
        image: datacity/ckan-cloud-operator
        imagePullPolicy: Always
        volumeMounts:
          - name: cco-dir
            mountPath: /root
          - name: datacity-k8s
            mountPath: /datacity-k8s
        source: |
          set -euo pipefail
          cd /datacity-k8s
          gcloud auth activate-service-account --key-file=/root/service_account_key.json
          gcloud config set project datacity-k8s
          gcloud container clusters get-credentials datacity --zone europe-west1-d
          helm init -c
          (
            {{ "{{inputs.parameters.exec_script}}" }}
          ) 2>&1
      outputs:
        result: |
          {{ "{{outputs.parameters.result}}" }}
