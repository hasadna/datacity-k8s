{{- range .Values.ccoExecWorkflowTemplates }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cco-{{ .name }}
spec:
  entrypoint: cco-exec
  arguments:
    parameters:
      {{- range .parameters }}
      - name: {{ .name | quote }}
        {{- if .default }}
        default: {{ .default | quote }}
        {{- end }}
      {{- end }}
  templates:
    - name: cco-exec
      inputs:
        parameters:
          {{- range .parameters }}
          - name: {{ .name | quote }}
          {{- end }}
      dag:
        tasks:
          - name: cco-exec
            templateRef:
              name: cco-exec
              template: script
            arguments:
              parameters:
                - name: exec_script
                  value: |
                    {{ range .parameters }}
                    {{ .name }}="{{ printf "{{inputs.parameters.%s}}" .name }}"
                    {{ end }}
                    if [ "{{ .set_instance_id }}" == "true" ]; then
                      INSTANCE_ID=$(kubectl -n ckan-cloud get ckancloudckaninstancename ckan-cloud-ckaninstancename-$INSTANCE_NAME -o json | jq -r '.spec["latest-instance-id"]')
                      echo $INSTANCE_ID
                      instance_id_ckan_exec="kubectl -n $INSTANCE_ID exec deploy/ckan -c ckan -- "
                    fi
                    {{ .exec_script | nindent 22 }}
---
{{- if .cronSchedule }}
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: cco-{{ .name }}
spec:
  schedule: {{ .cronSchedule | quote }}
  concurrencyPolicy: Forbid
  workflowSpec:
    workflowTemplateRef:
      name: cco-{{ .name }}
---
{{- end }}
{{- end }}
